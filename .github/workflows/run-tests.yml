name: Run tests

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        python-version: [3.7, 3.12]
        poetry-version: [1.3.2]

    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres
        env:
          POSTGRES_DB: test
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_HOST: localhost
          POSTGRES_PORT: 5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    steps:
    - uses: actions/checkout@v2

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install poetry ${{ matrix.poetry-version }}
      run: |
        python -m ensurepip
        python -m pip install --upgrade pip
        python -m pip install poetry==${{ matrix.poetry-version }}
        poetry config --local virtualenvs.in-project true

    - name: Install dependencies
      shell: bash
      run: python -m poetry install

    - name: Lint with Black
      run: python -m poetry run black . --check

    - name: Lint with isort
      run: python -m poetry run isort . --check

    - name: Lint with MyPy
      run: python -m poetry run mypy --config-file pyproject.toml .

    - name: Test with pytest
      run: |
        python -m poetry run pytest --cov=sqlalchemy_filterset --cov-report=xml --cov-fail-under=100

    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        fail_ci_if_error: false
        file: ./coverage.xml
        verbose: true
